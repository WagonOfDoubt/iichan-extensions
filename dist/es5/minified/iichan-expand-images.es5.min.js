"use strict";!function(){var t=function(t){if(!window.matchMedia("(max-width: 360px)").matches){var e=t.currentTarget.querySelector(".thumb"),n=e.src==e.dataset.fullSrc,a=n?e.dataset.thumbWidth:e.dataset.fullWidth,i=n?e.dataset.thumbHeight:e.dataset.fullHeight;e.setAttribute("width",a),e.setAttribute("height",i),n?e.style="":(e.style.width=a+"px",e.style.height="auto"),e.src=n?e.dataset.thumbSrc:e.dataset.fullSrc,t.preventDefault()}},e=function(e){var n=(e||document).querySelectorAll(".thumb"),a=!0,i=!1,r=void 0;try{for(var d,u=n[Symbol.iterator]();!(a=(d=u.next()).done);a=!0){var l=d.value,c=l.parentNode;if(c){var o=c.href.split(".").pop();if(["jpg","jpeg","gif","png","webp"].includes(o)){l.dataset.thumbWidth=l.getAttribute("width"),l.dataset.thumbHeight=l.getAttribute("height"),l.dataset.thumbSrc=l.src,l.dataset.fullSrc=c.href;var s=c.parentNode;if(s){var h=s.querySelector(".filesize > em");if(h){var m=h.innerText.match(/(\d+)x(\d+)/);null!==m&&(l.dataset.fullWidth=m[1],l.dataset.fullHeight=m[2],c.addEventListener("click",t))}}}}}}catch(t){i=!0,r=t}finally{try{a||null==u.return||u.return()}finally{if(i)throw r}}},n=function(){return document.body.classList.contains("de-runned")||!!document.body.querySelector("#de-main")},a=function(){if(!n()&&!JSON.parse(window.localStorage.getItem("iichan_settings")||"{}").disable_expand_images&&(document.head.insertAdjacentHTML("beforeend",'<style type="text/css">\n      @media only screen and not (max-width: 360px) {\n        a img.thumb[src*="/src/"] {\n          max-width: calc(100% - 8px);\n          max-height: initial;\n        }\n        a img.thumb {\n          margin: 0;\n          padding: 2px 4px;\n        }\n      }\n      @media only screen and not (max-width: 480px) {\n        a img.thumb[src*="/src/"] {\n          max-width: calc(100% - 40px);\n          max-height: initial;\n        }\n        a img.thumb {\n          margin: 0;\n          padding: 2px 20px;\n        }\n      }\n    </style>'),e(),"MutationObserver"in window)){if(n())return;new MutationObserver(function(t){t.forEach(function(t){var n=!0,a=!1,i=void 0;try{for(var r,d=t.addedNodes[Symbol.iterator]();!(n=(r=d.next()).done);n=!0){var u=r.value;if(!u.querySelectorAll)return;e(u)}}catch(t){a=!0,i=t}finally{try{n||null==d.return||d.return()}finally{if(a)throw i}}})}).observe(document.body,{childList:!0,subtree:!0})}};document.body?a():document.addEventListener("DOMContentLoaded",a)}();